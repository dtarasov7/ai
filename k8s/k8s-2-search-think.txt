### Список метрик для мониторинга кластера Kubernetes и инфраструктуры через Zabbix  
*(Исключены инфраструктурные метрики хостов)*  

---

#### **1. Недоступность Kubernetes API через балансировщик (LB)**  
- **Описание**: Проверяет, может ли внешний Zabbix-сервер получить доступ к Kubernetes API через виртуальный IP (VIP) балансировщика.  
- **Способ получения**: Прямой запрос от Zabbix-сервера к Kubernetes API через LB.  
  Пример: `curl -k --header "Authorization: Bearer <token>" https://<LB-VIP>/api/v1/namespaces`.  
- **Порог**: Алерт при HTTP-статусе ≠ 200 или таймауте более 5 секунд (проверка 3 попытки подряд).  
- **Источник**: Проверка доступности API через LB .  

---

#### **2. Отказ одного из master-узлов**  
- **Описание**: Проверяет работоспособность каждого master-узла (например, через `/healthz` endpoint).  
- **Способ получения**: Прямой запрос от Zabbix-сервера к каждому master-узлу напрямую (минуя LB).  
  Пример: `curl -k https://<master-ip>:6443/healthz`.  
- **Порог**: Алерт при HTTP-статусе ≠ 200 или таймауте более 5 секунд (проверка 3 попытки подряд).  
- **Примечание**: Альтернативно — проверка статуса узлов через Kubernetes API .  

---

#### **3. Состояние Ingress-узлов**  
- **Описание**: Проверяет, готовы ли Ingress-узлы принимать трафик (через `/healthz` endpoint).  
- **Способ получения**: Прямой запрос от Zabbix-сервера к каждому Ingress-узлу.  
  Пример: `curl -k https://<ingress-ip>:8443/healthz` (порт зависит от конфигурации Nginx).  
- **Порог**: Алерт при HTTP-статусе ≠ 200 или таймауте более 5 секунд (проверка 3 попытки подряд).  

---

#### **4. Статус Istio Ingress Gateway**  
- **Описание**: Проверяет, все ли поды Istio Ingress Gateway работают корректно.  
- **Способ получения**: Прямой запрос к Kubernetes API для получения статуса подов.  
  Пример: `kubectl get pods -n istio-system -l istio=ingressgateway`.  
- **Порог**: Алерт, если хотя бы один под не в статусе `Running`.  
- **Источник**: Управление трафиком в Istio .  

---

#### **5. Статус узлов кластера (Nodes)**  
- **Описание**: Проверяет, все ли узлы (master, ingress, worker) находятся в состоянии `Ready`.  
- **Способ получения**: Прямой запрос к Kubernetes API для получения статуса узлов.  
  Пример: `kubectl get nodes`.  
- **Порог**: Алерт, если хотя бы один узел не в статусе `Ready`.  
- **Источник**: Управление узлами в Kubernetes .  

---

#### **6. Перезапуски критических подов**  
- **Описание**: Проверяет количество перезапусков подов в критических пространствах имен (`kube-system`, `istio-system`).  
- **Способ получения**: Прямой запрос к Kubernetes API для получения списка подов с количеством перезапусков.  
  Пример: `kubectl get pods -n kube-system -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.status.containerStatuses[0].restartCount}{"\n"}{end}'`.  
- **Порог**: Алерт, если перезапуски > 1 за 24 часа.  

---

#### **7. Статус CoreDNS**  
- **Описание**: Проверяет, работают ли поды CoreDNS (критично для DNS-разрешения в кластере).  
- **Способ получения**: Прямой запрос к Kubernetes API для получения статуса подов CoreDNS.  
  Пример: `kubectl get pods -n kube-system -l k8s-app=kube-dns`.  
- **Порог**: Алерт, если хотя бы один под не в статусе `Running`.  

---

#### **8. Срок действия сертификатов на LB и master-узлах**  
- **Описание**: Проверяет срок действия SSL-сертификатов на LB и master-узлах.  
- **Способ получения**: Использование скрипта на Zabbix-агенте (через `openssl x509 -enddate -noout -in <cert-path>`).  
- **Порог**: Алерт, если до истечения сертификата осталось < 14 дней.  

---

#### **9. Доступность VIP балансировщика (LB)**  
- **Описание**: Проверяет, отвечает ли виртуальный IP балансировщика на ICMP-запросы.  
- **Способ получения**: Zabbix-агент на каждом сервере LB выполняет пинг VIP.  
- **Порог**: Алерт, если VIP недоступен с обоих серверов LB.  

---

#### **10. Работа процессов Nginx на LB**  
- **Описание**: Проверяет, запущены ли процессы Nginx на серверах LB.  
- **Способ получения**: Zabbix-агент проверяет количество процессов Nginx.  
  Пример: `ps -ef | grep nginx | grep -v grep | wc -l`.  
- **Порог**: Алерт, если количество процессов < 1.  

---

#### **11. Статус Istio Control Plane**  
- **Описание**: Проверяет, все ли компоненты Istio (Pilot, Citadel, Galley) работают корректно.  
- **Способ получения**: Прямой запрос к Kubernetes API для получения статуса подов в `istio-system`.  
- **Порог**: Алерт, если хотя бы один под не в статусе `Running`.  
- **Источник**: Архитектура Istio .  

---

#### **12. Задержка ответа Kubernetes API**  
- **Описание**: Измеряет время отклика Kubernetes API для выявления перегрузок.  
- **Способ получения**: Прямой запрос от Zabbix-сервера к Kubernetes API с измерением времени.  
- **Порог**: Алерт, если средняя задержка > 1 секунда за 5 последовательных проверок.  

---

### Рекомендации по реализации:  
1. **Zabbix Agent**: Используйте для проверок, требующих доступа к локальным ресурсам (сертификаты, процессы Nginx).  
2. **Прямые API-запросы**: Используйте для мониторинга состояния Kubernetes и Istio.  
3. **Аутентификация**: Для доступа к Kubernetes API настройте сервисный аккаунт с минимальными правами (RBAC).  
4. **Скрипты**: Для сложных проверок (например, срок действия сертификатов) используйте пользовательские параметры в Zabbix Agent.  

Эти метрики позволят дежурной смене оперативно выявлять критические проблемы в кластере и балансировщике, минимизируя ложные алерты.

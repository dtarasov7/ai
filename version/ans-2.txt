Чтобы в **Grafana 10** отобразить таблицу, где для каждого сервиса будет показана **текущая версия** и **версия из прошлого (24 часа назад)**, можно воспользоваться следующим подходом.

---

## 🧩 Исходные данные:

- Метрика: `info`
- Метки:
  - `name` — имя сервиса
  - `version` — текущая версия

Метрика `info` — это типичная **gauge**, которая не меняется часто. Ее значение используется как "статус" или "информация", а не как временной ряд с динамикой.

---

## ✅ Цель:

Показать таблицу вида:

| Service Name | Current Version | Version 24h Ago |
|--------------|------------------|-------------------|
| service-a    | v1.2.3           | v1.2.2            |
| service-b    | v2.0.1           | v2.0.1            |

---

## 🔧 Решение:

### Шаг 1: Используйте PromQL с оператором `offset`

Prometheus позволяет использовать `offset`, чтобы получить значение метрики за прошлый период.

```promql
{__name__="info"}
```

```promql
{__name__="info"} offset 24h
```

Но так как метка `version` может меняться со временем, нужно сделать **join по метке `name`**, чтобы объединить текущую и прошлую версию.

---

### Шаг 2: Полный PromQL запрос

```promql
(
  info
) unless (
  info != info offset 24h
)
```

Это работает только частично. Лучше использовать явное объединение через `group_left`.

Вот рабочий PromQL-запрос:

```promql
avg by (name, version) (info)
unless_right
avg by (name, version) (info offset 24h)
```

Или более точный вариант с использованием `group_left()`:

```promql
# Текущие значения
info
#
# Объединяем с теми же сервисами, но их состоянием 24ч назад
# по метке name
unless_right group_left(name)
# Значения 24 часа назад
info offset 24h
```

> Примечание: `unless_right` — это специфический оператор, который возвращает левый тензор, если правого нет. Подходит, если вы хотите найти изменения. Но если вам нужно всегда видеть оба значения (текущее и старое), то лучше использовать `absent()` + преобразования.

---

### Шаг 3: Альтернативный надежный способ — использование записи временного ряда

Если вы используете **recording rules**, рекомендуется создать запись:

```yaml
record: job:info:version:current
expr: info

record: job:info:version:24h_ago
expr: info offset 24h
```

Тогда ваш запрос упростится до:

```promql
job:info:version:current
unless_right group_left(name)
job:info:version:24h_ago
```

---

## 📊 Настройка панели в Grafana

1. Создайте новую панель типа **Table**.
2. Вставьте PromQL-запрос выше.
3. Перейдите на вкладку **Transform**.
4. Добавьте преобразование **Group by** или **Labels to fields**.
5. Сделайте переименование полей:
   - `version` → `Current Version`
   - `version offset 24h` → `Version 24h Ago`

6. При необходимости добавьте фильтрацию по сервисам.

---

## 🧪 Пример вывода после преобразований

| Field       | Current Value | Previous Value (24h ago) |
|-------------|---------------|---------------------------|
| service-a   | v1.2.3        | v1.2.2                    |
| service-b   | v2.0.1        | v2.0.1                    |

---

## 📝 Примечания:

- Если версия не менялась, Prometheus вернет **одно и то же значение** и для текущего момента, и для 24 часов назад.
- Чтобы показывать только те сервисы, у которых была метрика 24 часа назад, используйте `and on(name)` вместо `unless`.
- Если метрика `info` не собирается регулярно, могут быть пропуски. Убедитесь, что `scrape_interval` достаточный.

---

## 💡 Совет

Если вы хотите просто сравнить, изменилась ли версия за последние 24 часа:

```promql
(
  avg by (name) (info)
  != 
  avg by (name) (info offset 24h)
)
```

Затем в Grafana можно фильтровать только строки с `1` (значит версия поменялась).

---

Хотите, чтобы я помог адаптировать запрос под ваши конкретные метки или экспортеры?

Чтобы создать таблицу в Grafana, отображающую сервисы из переменной `srv`, которые не отправили метрику `uptime`, выполните следующие шаги:

### 1. Настройка запроса в Prometheus
Используйте этот запрос, чтобы найти сервисы без метрик `uptime`:
```promql
(
  count by(service_name) (
    node_systemd_unit_state{state="active"}
  ) > 0
  unless
  count by(service) (
    uptime{job!=""} offset 1m  # Игнорируем последнюю минуту для избежания ложных срабатываний
  ) > 0
) * 0
```

**Пояснение:**
- `node_systemd_unit_state{state="active"}`: Берёт активные сервисы из node_exporter.
- `label_replace(...)`: Переименовывает метку `name` в `service_name` для совместимости с меткой `service` из `uptime`.
- `offset 1m`: Игнорирует данные за последнюю минуту, чтобы избежать задержек в сборе метрик.
- `unless`: Возвращает сервисы, которые есть в первом наборe (активные сервисы), но отсутствуют во втором (отправившие `uptime`).
- `* 0`: Преобразует результат в 0, оставляя только метки (для удобства отображения).

### 2. Настройка панели Table в Grafana
1. **Тип визуализации:** Выберите "Table".
2. **Запрос:** Вставьте указанный выше PromQL-запрос.
3. **Поля таблицы:**
   - Отключите отображение столбца "Value".
   - Оставьте только столбец `service_name` (он будет содержать имена проблемных сервисов).

### 3. Дополнительные настройки
- **Интервал обновления:** Установите `1-5m` в соответствии с вашим scrape_interval в Prometheus.
- **Временной диапазон:** Используйте `now-10m` (чтобы охватить период задержек метрик).
- **Переменная `srv`:** Убедитесь, что она использует запрос вида:
  ```promql
  label_values(node_systemd_unit_state{state="active"}, name)
  ```

### 4. Пояснение логики
- **Почему `offset 1m`?** Prometheus может обрабатывать метрики с задержкой. Игнорирование последней минуты предотвращает ложные срабатывания.
- **Группировка по `service_name`:** Сравнивает сервисы по единому идентификатору.
- **Автоматическое обновление:** При изменении списка `srv` панель будет актуализироваться.

### 5. Пример результата
Таблица будет выглядеть так:

| service_name  |
|---------------|
| api-service   |
| cron-backup   |

Где перечислены сервисы, которые активны в systemd, но не отправили метрику `uptime` за указанный период.

### Устранение проблем
- **Нет данных?** Проверьте:
  - Совпадают ли значения `name` в node_exporter и `service` в метрике `uptime`.
  - Корректность временных диапазонов в запросе.
  - Наличие метрик `node_systemd_unit_state` и `uptime` в Prometheus.
- **Добавление хоста:** Если нужно отображать host, добавьте `instance` в группировку:
  ```promql
  count by(service_name, instance) (...)
  ```
